/*
 * Copyright 2017 Jan Buchinger
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package net.janbuchinger.code.mishmash;

import java.util.Random;

/**
 * This Class plays with chaotic strings containing upper case letters form A to
 * Z and numbers from 0 to 9.
 * 
 * @author Jan Buchinger
 * 
 */
public final class ChaosFx {
	private final static String orderString = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
	private final static String[] chaoticArray = { "HA306RKMP4LSVF8XDEIY27NOUG5BT9WJ1CQZ",
			"GSW9YH3UNVZR1CMIAOF5JE2487TDK6PXL0QB", "HGPDEFAB67LWITJO0Y3QRU25SCKNV91MX84Z",
			"LZFGXRTD8ESMUYKIV0W49OQ6573J1HAC2NBP", "XY4VHK2P8OWL7ICZUGNF5ARS1MDEQ9J630BT",
			"8C0F7X5O1KE2ZL34HVQBYDGPAWJNSMUTIR69", "YUFPV6DTR9KINEQ1BJOGC52A4S387L0HWZXM",
			"P65SICJL4K971UXO8YN2FM3EBVRQZTDGWAH0", "ZUW3RHBG9XOPFMAV1LCN62DKTY50JES7QI84",
			"L0XV9TG2SNDQ1FP6OKE4Z5HI83WAB7YRJUCM", "MXQEVSNJ06GOULZCKTIYD75R8B2WP3HFA149",
			"NA7QRWT5GBCFUL3V4EZPYKMO1HX602S89IDJ", "Y3TN7SLH81VGAQ6ZC4D0RK2PMEUXWJ9IO5BF",
			"806D7MJ94WS2ATEXRQGCLF1VOU3YIKHPZ5NB", "UXZ0M3AGE4RTLY2DV6BIFJNO8WS9PQC157KH",
			"WMJ847YIXHLVTP3SKDGZQR5OUE690AFBC2N1", "IA01S85BRCWKQ9N3GJP467E2DXMLZOFTHYVU",
			"NK48YGMPX9W7QRBVZUHC60A1FO3DJE2I5SLT", "JPK7FCOE16B4AW39ZQ8HS5VDTXY02LRUGINM",
			"ELUQN618XRYDTF5GCW29M4ASBV0KJ7Z3HOIP", "PW3N5DOMXSJLQV48IYRB102CEZTUGAH7FK96",
			"SQJDNHCAVZ8KXY26PIOUELBW9GRF0T57341M", "QC3N4AKXT6GJZ9D0O7LWP8Y2HERSB5IVU1MF",
			"MGTLPEOHZ3IKU217QNX64WD5B8FA0CSRJ9VY", "TERUDGFMBJQY4X9S623HKVCZ85P0N7LAOI1W",
			"K7I2NWG84X3B9C5LYRZJ0MTAUOEPDVFQ61HS", "5SICF93DLXA0JBMZG6POR2H47QUYKWN8EVT1",
			"DQ5ZLMVG41UKWC3XEAY2ROBN9F7H6TISP8J0", "SDKGWXJ4ORIZFUT827LA9VHP0BYQM5N36CE1",
			"7NEUZ8HB2OCYWGM6DTI0R4XA53KQS1FP9VLJ", "WBQO2E7ZHFJXL45R3S81D9K06GMIYPCAVTUN",
			"WRSJXD3GY84M2ZAHTQNBK0P96VU1O5I7LEFC", "1O6BP5DN37HW8K4SVL9FUMQCXRZJIE20GATY",
			"BDFL9WE0PUYIQ61MCV35R27HGT4JXAOSN8ZK", "APVTR5ODEGCXKF2YL1Z83Q06IJ7SMW4NH9BU",
			"Z9SBGOYWQ0583N2H6FAJUXI1R7EKT4DPLVCM", "J9S8AWVCHN3I0T7DUF1EO2RLQ6GYPZK4BX5M",
			"D3ZYLPB4UXO7RGT0Q58J1NW9AIVFSKHEMC62", "7EKX5JT4ALHROSW0Z3N68BDPMYQ2UFVIC1G9",
			"J9LEQWSR61V4CBTYKXZ57APO8N3M0GU2FDIH", "D8GQFRC7P90LV4U3OZHNYWM25KTJX61AISBE",
			"CV57ZSMBAWEFNROXI3GQ1H4DT90YPUK6J8L2", "PMRWLH1Q0BGV4JCIZ7Y3S2T5E8DFOXN96KAU",
			"T5WSDNG4I82KQZL90H7BX3PMJAVFEYOUR6C1", "O1FR5XQSG7MJYDV8ZHETK4CPW3UB9LI62A0N",
			"012X5K67YUJIABSZWOPF3DTLC9NGQHRMV8E4", "P5G3YOZUN9A7C1D0VW2IBJKHS8LFQ4TMRX6E",
			"0V6BG7Z5IC3LT48O9KADFSXWNHM2QJPEUYR1", "TDZ7MKVYL5JPBQ13OHAEFXIS0G8942WUNRC6",
			"DTRGPOIQCL82YMB9KZU1635HVWAEN4F07JSX", "QLEXKR56FUN920H37SJOWABY8ZV4MI1CTPGD",
			"AXKIW63RE947152JSHDLNGPOF8VMZQY0TUBC", "B9V2LNG7CMZESQ4FD8YXIAWT61K0HUPJ5O3R",
			"KEIAFTV1N364WJBDMP27UHG5O8YXS09RCZLQ", "1TGE2RMYOSJ9VA564XKCHD8IQNWBP3U7ZF0L",
			"W7MXZS0ERHIY83QFAVKC526B94PU1DNLOTGJ", "1GZ4DQCRKFBHYUML2N0XI8EJVAW6ST3O759P",
			"3S190O65TGB4CHANWZVFYRPEQXD28UI7JMLK", "364OFXN8ZJSIQVCPWBHLD10G29T7KAE5RMUY",
			"ZLMXKFGWDRHQNOV8C62S3BAT4JPE957YIU01", "OZKS3XFJN1MWTGVEHCDY56RUL4BI7AP8920Q",
			"V0UP52KYCILOJZWEDF48SGXQB639NATRMH17", "7R8G43DIE1TYLFHQ59PABZX0CWJS6KMVU2ON",
			"ZIGHVSBRXEJYCF79WUK03O51AQP2DLT4MN86", "JFZH0AR17XKUPNTLVSCW4Q8M5E23IDGB9YO6",
			"2UY3PCGWQTOAL7ZJN8SX1VB9FD04KEMHRI65", "M1CSZH7NIETFPQOBJUD0AXLW8K54Y9V2G3R6",
			"TO5D68VS13YPZCHMUAR7JE9F0GN2QIXWKBL4", "SFATRONL5C7MBIGZH9YD3WV61U04JKX2Q8EP",
			"L24A9BVYF17HGJTMQIP0US3KEROXN5ZD6WC8", "J3OFK0ZUAQ1GIL9NS2HB4RXEPY5M8CDTV76W",
			"1TUAOYF0QDZPJMHN87CEXV23RSIL96WG5K4B", "LU02TF9RJME8SXOKDAPBHWZQ3VY7564N1CGI",
			"FEAR94T3BS0XC8ZQHYI1JGLVWM2KD7PN65OU", "1VZK9AND6WGFS72YHEOQPXLR3B80UT54ICMJ",
			"VX1EYLTMFAOJ9SQCH5RWUKDPZ8B3N2G7I640", "0U6KLRZADHEO3T7QFMB4GSV5XY2I1N98WPCJ",
			"3DO5TY0BU2JKHCE1L4WMXP8SZ6G9RAFQ7VIN", "U7JN4V20FCPDB3GY65AKHXRWT9SIZMQL8O1E",
			"IDRO8KNY9CMJ1GHXLW3B06VE7FZS25TQPUA4", "810ZD3LGX2M9IPNQUKOSFTE7BYVH5RC46WAJ",
			"PB0TFY6O4MLAKE7JS2G3ZWXHQC5RNUI9V18D", "0GIC6Z9W3UFV2DXHQSYRJ57TANMK84EOPBL1",
			"M28LX4Y1TSF7PGIHZVJKRCN5U6B9OQ0DWEA3", "X4RDEBT5NJQ3OS6H9LIAC8YUWM1ZF072GVPK",
			"EAPVUB7N1FLWMGCDS64T38RKHXIO2YQ950JZ", "HXWM9BI2KYLGVSPTCADF7R6Q4O10EUN3Z85J",
			"MLPUB8R4S7N59E12Q36GZHCKTIJADYOXVWF0", "3R9Y4FQLK5DU1OETH8V6NBZCSXI7WAG02PJM",
			"3NO6QJPTR2MW1GY8F5V4KBSXAH7IU0DCEZ9L", "2FH7D9STPJ8BAGIKVZ0Q1ROUXNME546Y3LCW",
			"06FCYXMDRTQJSBV7GW9NZ3ELH8U1OK5P4IA2", "N4Z3USJGETWPY28HLO1DIX79V0AKBR5FCMQ6",
			"LJINYCF9423V8MTXD6S7ORK1P0BU5EQWHZGA", "41EY5HZJP2BSD7NIO38FW6GL9UXKATQCM0VR",
			"VZKFLQJWP5NX8RD37TAM40B1SCHIYGE6U29O", "S7MDYRHQ34E1B0T2A5OK9LWPI8CZJFNVXG6U",
			"PF1MIH6EYGKR7CDB3N8UJS2TAV9O45LXQ0WZ", "SGR86C19XF3VU4QPO0MJNHAKIYZW75E2TDBL",
			"01UIE7FKJRVPDTSZA2W5C6ONXMGB8LQ4HY39", "9JG5PEI2WUCXK47VAT103HLY8RQZDS6OBNMF",
			"QT0XP51LFBIKHMZ9U3VG6AD4SJNWR7C2Y8OE", "1EBHMDNQ9FLX2OV7JRU04WZ68STK5YCGPIA3",
			"ILWJP5M26FDYX38KNH7CZTOG90SAV1UER4QB", "YO4IR5BWUCAM9DS0NPV8ZFHL72G6QXKEJ13T",
			"FKOB18VSU3AEQJIPCLRHM95XDNY7W2Z04G6T", "8O2KZY5W7SN4V1UMFIE39PGAHLCTJQX6D0BR",
			"ZMDL631TXSG9AOYR7W04HEFB8UP5VNQJ2KCI", "7P8RL6J50AOXKW1ZCE3GU9FMSDHIY4NV2QBT",
			"84JUBMT6WECY3RL29ZP5AS7OXVIDH1N0QKFG", "ZPI3EW6HMFJX12S0G4NYLQO7VRUDTKBAC958",
			"KPNC584EYVXHQ2J1SA3Z6UTL0BGF9W7ODRMI", "J5O8FQE1CWXN0T4G3K7HR2ADZB9MPYLIUVS6",
			"TSB5F4D86HOWVQX1LERYP937GJZKUCN2IMA0", "3X6KM4RISO8A9ECLZUWQ1BHPFY70TDN2VJG5",
			"LHGKWX6DSI9YU8R51O7VQTMC2N4A30BJEZPF", "OVKT96DJHMX5AE3Y2U4LR0IFS81WCNBQGZP7",
			"RHTGV2Q4NMI98D51P37AJ6E0KSCBUYWOZLFX", "QCVL46SR091KFGDX7UMIZHT8ON25J3EAPWBY",
			"MFR8NWBUHP5Y2ZA3S6GEK91JXO04DTQ7LVCI", "P5Y64FNE0T9VBZIDQOM32X78GUJWRKS1ACHL",
			"EQGXA81W09RPFNV6LY2TZODS4C3JMIK7BHU5", "C4L27IKXNA31GVYPRWE6D0OFTJBS58ZQUMH9" };

	/**
	 * Generates a <code>String</code> by randomly picking a character from the
	 * <code>String</code> "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789". The
	 * <code>String</code> contains Any of the letters from A to Z and Numbers
	 * from 0 to 9, maybe multiple times.
	 * 
	 * @param length
	 *            The length of the return string
	 * @return A chaotic <code>String</code>.
	 */
	public final static String getChaosString(int length) {
		String x = "";
		Random r = new Random();
		for (int i = 0; i < length; i++) {
			x += orderString.charAt(r.nextInt(orderString.length()));
		}
		return x;
	}

	/**
	 * Generates a <code>String</code> from a pre shuffeled array of strings.
	 * The <code>String</code> contains Any of the letters from A to Z and
	 * Numbers from 0 to 9, maybe multiple times.
	 * 
	 * @param length
	 *            The length of the return <code>String</code>.
	 * @return A chaotic <code>String</code>.
	 */
	public final static String generateChaosString(int length) {
		String s = "";
		String cx;
		Random r = new Random();
		for (int i = 0; i < length; i++) {
			cx = chaoticArray[r.nextInt(chaoticArray.length)];
			s += cx.charAt(r.nextInt(cx.length()));
		}
		return s;
	}

	// public final static void test() {
	// Random r = new Random();
	// String s;
	// for (int i = 0; i < 10000; i++) {
	// s = orderString.charAt(r.nextInt(orderString.length())) + "";
	// if (s.equals("A") || s.equals("9"))
	// System.out.println(s);
	// }
	// }

	/**
	 * This method randomizes the <code>String</code>
	 * "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
	 * 
	 * @return A randomized <code>String</code> containing all the upper case
	 *         letters A to Z and numbers 0 to 9.
	 */
	public final static String shuffle() {
		String s = "";
		// boolean[] used = new boolean[orderString.length()];
		boolean allUsed = false;
		char c;
		// int ir;
		Random r = new Random();
		while (!allUsed) {
			if (!s.contains(("" + (c = orderString.charAt(r.nextInt(orderString.length())))))) {
				s += "" + c;
				if (s.length() == orderString.length())
					allUsed = true;
			}
		}
		return s;
	}
}
